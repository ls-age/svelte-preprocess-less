{"version":3,"file":"index.js","sources":["../node_modules/svelte-preprocess-filter/out/module.js","../src/index.js"],"sourcesContent":["/* eslint-disable import/prefer-default-export */\n\nfunction style({ name, all = false, type = true, lang = true } = {}, { attributes } = {}) {\n  if (all) {\n    return true;\n  }\n\n  if (!name) {\n    throw new Error('Missing \\'name\\' filter option');\n  }\n  if (!attributes) {\n    throw new Error('No attributes passed to filter');\n  }\n\n  const typeAttributes = [type && attributes.type, lang && attributes.lang];\n\n  return typeAttributes.includes(name) || typeAttributes.includes(`text/${name}`);\n}\n\nexport { style };\n//# sourceMappingURL=module.js.map\n","import { default as lessCompiler } from 'less';\nimport { style as filter } from 'svelte-preprocess-filter';\n\nexport async function preprocessLess(\n  lessOptions = {},\n  filterOptions = {},\n  { filename, content, attributes }\n) {\n  if (!filter(Object.assign({ name: 'less' }, filterOptions), { attributes })) { return null; }\n\n  try {\n    const { css, map } = await lessCompiler.render(content, Object.assign({\n      filename,\n      sourceMap: {},\n    }, lessOptions));\n\n    return { code: css, map };\n  } catch (err) {\n    const { line, column, index: character, extract } = err;\n    if (!(line && column && extract)) throw err;\n\n    const frame = extract.map((l, i) => `${(line - 1) + i}:${l}`);\n    frame.splice(2, 0, '^'.padStart(column + line.toString().length + 2));\n\n    delete err.line;\n    delete err.column;\n    delete err.index;\n    delete err.extract;\n    err.frame = frame.join('\\n');\n\n    // The line number only counts from the beginning of the <style> tag.\n    err.start = { line, column, character };\n    err.end = err.start;\n\n    throw err;\n  }\n}\n\nexport function less(lessOptions, filterOptions) {\n  return preprocessLess.bind(null, lessOptions, filterOptions);\n}\n"],"names":["style","name","all","type","lang","attributes","Error","typeAttributes","includes","preprocessLess","lessOptions","filterOptions","filename","content","filter","Object","assign","css","map","lessCompiler","render","code","err","line","column","index","character","extract","frame","l","i","splice","padStart","toString","length","join","start","end","less","bind"],"mappings":";;;;;;;;AAAA;;AAEA,SAASA,KAAT,CAAe,EAAEC,IAAF,EAAQC,MAAM,KAAd,EAAqBC,OAAO,IAA5B,EAAkCC,OAAO,IAAzC,KAAkD,EAAjE,EAAqE,EAAEC,UAAF,KAAiB,EAAtF,EAA0F;MACpFH,GAAJ,EAAS;WACA,IAAP;;;MAGE,CAACD,IAAL,EAAW;UACH,IAAIK,KAAJ,CAAU,gCAAV,CAAN;;MAEE,CAACD,UAAL,EAAiB;UACT,IAAIC,KAAJ,CAAU,gCAAV,CAAN;;;QAGIC,iBAAiB,CAACJ,QAAQE,WAAWF,IAApB,EAA0BC,QAAQC,WAAWD,IAA7C,CAAvB;;SAEOG,eAAeC,QAAf,CAAwBP,IAAxB,KAAiCM,eAAeC,QAAf,CAAyB,QAAOP,IAAK,EAArC,CAAxC;;;ACbK,eAAeQ,cAAf,CACLC,cAAc,EADT,EAELC,gBAAgB,EAFX,EAGL,EAAEC,QAAF,EAAYC,OAAZ,EAAqBR,UAArB,EAHK,EAIL;MACI,CAACS,MAAOC,OAAOC,MAAP,CAAc,EAAEf,MAAM,MAAR,EAAd,EAAgCU,aAAhC,CAAP,EAAuD,EAAEN,UAAF,EAAvD,CAAL,EAA6E;WAAS,IAAP;;;MAE3E;UACI,EAAEY,GAAF,EAAOC,GAAP,KAAe,MAAMC,aAAaC,MAAb,CAAoBP,OAApB,EAA6BE,OAAOC,MAAP,CAAc;cAAA;iBAEzD;KAF2C,EAGrDN,WAHqD,CAA7B,CAA3B;;WAKO,EAAEW,MAAMJ,GAAR,EAAaC,GAAb,EAAP;GANF,CAOE,OAAOI,GAAP,EAAY;UACN,EAAEC,IAAF,EAAQC,MAAR,EAAgBC,OAAOC,SAAvB,EAAkCC,OAAlC,KAA8CL,GAApD;QACI,EAAEC,QAAQC,MAAR,IAAkBG,OAApB,CAAJ,EAAkC,MAAML,GAAN;;UAE5BM,QAAQD,QAAQT,GAAR,CAAY,CAACW,CAAD,EAAIC,CAAJ,KAAW,GAAGP,OAAO,CAAR,GAAaO,CAAE,IAAGD,CAAE,EAA7C,CAAd;UACME,MAAN,CAAa,CAAb,EAAgB,CAAhB,EAAmB,IAAIC,QAAJ,CAAaR,SAASD,KAAKU,QAAL,GAAgBC,MAAzB,GAAkC,CAA/C,CAAnB;;WAEOZ,IAAIC,IAAX;WACOD,IAAIE,MAAX;WACOF,IAAIG,KAAX;WACOH,IAAIK,OAAX;QACIC,KAAJ,GAAYA,MAAMO,IAAN,CAAW,IAAX,CAAZ;;;QAGIC,KAAJ,GAAY,EAAEb,IAAF,EAAQC,MAAR,EAAgBE,SAAhB,EAAZ;QACIW,GAAJ,GAAUf,IAAIc,KAAd;;UAEMd,GAAN;;;;AAIJ,AAAO,SAASgB,IAAT,CAAc5B,WAAd,EAA2BC,aAA3B,EAA0C;SACxCF,eAAe8B,IAAf,CAAoB,IAApB,EAA0B7B,WAA1B,EAAuCC,aAAvC,CAAP;;;;;;"}